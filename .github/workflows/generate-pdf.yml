name: Generate PDF and Deploy Pages

on:
  push:
    branches:
      - main

jobs:
  deploy_json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # (Optional) Build or process your JSON if needed here

      - name: Deploy updated JSON to GitHub Pages
        uses: ./.github/workflows/static.yml@main
        with:
          publish_dir: '.'   # Adjust if your site builds to a specific folder
          
  generate_pdf:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Generate PDF
        run: node generatePDF.js

      - name: Commit and push PDF
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add menu.pdf
          git commit -m "Update generated PDF" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy_pages:
    needs: generate_pdf
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Call the reusable static deployment workflow again, now with the generated PDF included
      - name: Deploy site with PDF to GitHub Pages
        uses: ./.github/workflows/static.yml@main
        with:
          publish_dir: '.'   # Adjust if necessary
          
      - name: Notify Client
        env:
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
        run: |
          PAYLOAD=$(jq -n --arg timestamp "$(date -u +'%Y-%m-%dT%H:%M:%SZ')" '{
            status: "success",
            message: "PDF generated successfully",
            timestamp: $timestamp
          }')
          SIGNATURE=$(echo -n "$PAYLOAD" | openssl dgst -sha256 -hmac "$WEBHOOK_SECRET" | awk '{print $2}')
          SIGNATURE="sha256=$SIGNATURE"
          echo "Signature: $SIGNATURE"
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "x-hub-signature-256: $SIGNATURE" \
            -d "$PAYLOAD" \
            "${{ secrets.PDF_WEBHOOK_URL }}"
